variables:
  SERVICE_NAME: "archive-service"
  MAVEN_CLI_OPTS: " --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=./../.m2/repository"

stages:
  - build
  - test
  - publish
  - deploy

cache: &global_cache
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - .m2/repository/
  policy: pull-push

maven_build:
  stage: build
  image: maven:3.6.3-jdk-11-openj9
  script:
    - whoami
    - echo "10.105.96.10    $CONTAINER_REGISTRY_URL" >> /etc/hosts
    - cat /etc/hosts
    - mvn $MAVEN_CLI_OPTS clean install -DskipTests -s maven/settings.xml
  artifacts:
    when: always
    expire_in: 1 hour
    paths:
      - target/
      - build/

maven_test:
  stage: test
  image: maven:3.6.3-jdk-11-openj9
  cache:
    <<: *global_cache
    policy: pull
  script:
    - mvn $MAVEN_CLI_OPTS test -s maven/settings.xml

.publish_image:
  stage: publish
  cache:
    <<: *global_cache
    policy: pull
  tags:
    - shell
  variables:
    IMAGE: "${CONTAINER_REGISTRY_APU_URL}${SERVICE_NAME}:${TAG}"
  script:
    - pwd
    - whoami
    - ls
    - find . -name *.jar
    - docker login -u "$CONTAINER_REGISTRY_USERNAME" -p "$CONTAINER_REGISTRY_PASSWORD" "$CONTAINER_REGISTRY_URL"
    - docker build -t $IMAGE --build-arg JAR_FILE=target/*.jar . -f Dockerfile
    - docker push $IMAGE
    - docker logout

publish_image_dev:
  extends: .publish_image
  only:
    - branches
  except:
    - master
  variables:
    TAG: "dev"

publish_image_cae:
  extends: .publish_image
  only:
    - master
  variables:
    TAG: "cae"

publish_image_prd:
  extends: .publish_image
  only:
    - tags
  variables:
    TAG: "${CI_COMMIT_TAG}"

image: alpine/k8s:1.24.15

.deploy_tanzu:
  stage: deploy
  cache:
    key: ${CI_COMMIT_REF_SLUG}-deploy
    paths:
      - /root/.cache
      - /usr/local/bin/tmc
  variables:
    IMAGE: "${CONTAINER_REGISTRY_APU_URL}${SERVICE_NAME}:${TAG}"
  script:
    - whoami
    - apk add curl
    - curl $TANZU_MISSION_CONTROL_BINARY_URL --output tmc
    - install tmc /usr/local/bin/tmc
    - export KUBECONFIG=$KUBECONFIG_FILE TMC_API_TOKEN=$TANZU_API_TOKEN
    - tmc login --name apu_tmc --no-configure
    - kubectl config use-context $CLUSTER_CONTEXT
    - cat "k8s/manifest.yaml" | envsubst | kubectl apply -f -
    - kubectl set image deployment/$SERVICE_NAME $SERVICE_NAME=$IMAGE -n $NAMESPACE
    - kubectl rollout restart deploy $SERVICE_NAME -n $NAMESPACE

deploy_tanzu_dev:
  extends: .deploy_tanzu
  only:
    - branches
  except:
    - master
  variables:
    TAG: "dev"
    NAMESPACE: "smr-dev-apu"
    CLUSTER_CONTEXT: "usdc01-tkg-smr-dev"
    INGRESS_HOST: "${SERVICE_NAME}.tkg-smr-dev.usdc01.solera.farm"

deploy_tanzu_cae:
  extends: .deploy_tanzu
  only:
    - master
  variables:
    TAG: "cae"
    NAMESPACE: "smr-cae-apu"
    CLUSTER_CONTEXT: "usdc01-tkg-smr-cae"
    INGRESS_HOST: "${SERVICE_NAME}.tkg-smr-cae.usdc01.solera.farm"

deploy_tanzu_prd:
  extends: .deploy_tanzu
  only:
    - tags
  variables:
    TAG: "${CI_COMMIT_TAG}"
    NAMESPACE: "smr-prod-apu"
    CLUSTER_CONTEXT: "usdc01-tkg-smr-prd"
    INGRESS_HOST: "${SERVICE_NAME}.tkg-smr-prod.usdc01.solera.farm"
  when:
    manual